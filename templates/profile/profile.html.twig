{% extends 'base.html.twig' %}

{% block title %}Mon Profil{% endblock %}

{% block body %}
  <div class="h-full flex items-center justify-center bg-gree-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      {% for label, messages in app.flashes %}
        {% for message in messages %}
          {% if label == 'success' %}
            <div
                    class="bg-green-50 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4"
                    role="alert"
            >
              <strong class="font-bold">Succès !</strong>
              <span class="block sm:inline ml-2">
                    {{ message }}
                </span>
            </div>
          {% endif %}
        {% endfor %}
      {% endfor %}

      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Bonjour
          {% if profile.appUser %}
            {{ profile.appUser.username }} {{ profile.appUser.lastname }}
          {% else %}
            (Inconnu)
          {% endif %}
        </h2>
      </div>

      <!-- Mode Vue -->
      <div id="view-mode" class="space-y-6">
        <div class="flex flex-col items-center">
          {% if profile.avatar %}
            <img src="{{ asset('/uploads/avatars/' ~ profile.avatar) }}" alt="Avatar" class="mt-2 rounded-full w-24 h-24 object-cover">

          {% else %}
            <p class="text-gray-500 mt-2">Aucun avatar</p>
          {% endif %}
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700">Bio</label>
          <p class="mt-2 text-gray-700">{{ profile.bio ?: 'Pas de bio' }}</p>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700">Préférences</label>
          <ul class="list-disc list-inside mt-2 text-gray-700">
            {% for key, value in profile.preferences %}
              <li>{{ key }} : {{ value }}</li>
            {% endfor %}
          </ul>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700">Mesures</label>
          <ul class="list-disc list-inside mt-2 text-gray-700">
            {% for key, value in profile.measurements %}
              <li>{{ key }} : {{ value }}</li>
            {% endfor %}
          </ul>
        </div>
      </div>

      <div id="edit-mode" class="hidden">
        {{ form_start(form, { 'attr': {'class': 'mt-8 space-y-6'} }) }}
         <input type="hidden" name="_csrf_token" value="{{ csrf_token('edit_profile') }}">

        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            {{ form_label(form.avatarFile) }}
            {{ form_widget(form.avatarFile, {'attr': {'class': 'w-full p-2 border border-gray-300 rounded'}}) }}
          </div>

          <div>
            {{ form_label(form.bio, null, {'label_attr': {'class': 'sr-only'}}) }}
            {{ form_widget(form.bio, {
              'attr': {
                'class': 'appearance-none rounded-none relative block w-full px-3 py-2 border
                           border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md
                           focus:outline-none focus:ring-indigo-500 focus:border-indigo-500
                           focus:z-10 sm:text-sm',
                'placeholder': 'Votre bio...'
              }
            }) }}
          </div>
        </div>

        <div class="rounded-md shadow-sm">
          <div class="mt-4">
            {{ form_label(form.preferences, 'Préférences', {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
            {{ form_widget(form.preferences, {
              'attr': {
                'class': 'mt-1 w-full border-gray-300 rounded p-2'
              }
            }) }}
          </div>
        </div>

        <div class="rounded-md shadow-sm">
          <div class="mt-4">
            {{ form_label(form.height, 'Taille', {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
            {{ form_widget(form.height, {
              'attr': {
                'class': 'mt-1 w-full border-gray-300 rounded p-2',
                'placeholder': 'Taille (cm)'
              }
            }) }}
          </div>
          <div class="mt-4">
            {{ form_label(form.weight, 'Poids', {'label_attr': {'class': 'block text-sm font-medium text-gray-700'}}) }}
            {{ form_widget(form.weight, {
              'attr': {
                'class': 'mt-1 w-full border-gray-300 rounded p-2',
                'placeholder': 'Poids (kg)'
              }
            }) }}
          </div>
        </div>

        <div>
          <button type="submit"
                  class="group relative w-full flex justify-center py-2 px-4
                         border border-transparent text-sm font-medium rounded-md
                         text-white bg-indigo-600 hover:bg-indigo-700
                         focus:outline-none focus:ring-2 focus:ring-offset-2
                         focus:ring-indigo-500 mt-6">
            Sauvegarder
          </button>
        </div>
        {{ form_end(form) }}
      </div>

      <button id="edit-toggle"
              class="group relative w-full flex justify-center py-2 px-4
                   border border-transparent text-sm font-medium rounded-md
                   text-white bg-blue-600 hover:bg-blue-700
                   focus:outline-none focus:ring-2 focus:ring-offset-2
                   focus:ring-blue-500">
        Modifier le profil
      </button>

      <div class="text-center">
        <a href="{{ path('app_user_edit') }}"
           class="font-medium text-indigo-600 hover:text-indigo-500 mt-4 inline-block">
          Modifier vos informations personnelles
        </a>
      </div>

    </div>
  </div>

  <!-- Script pour basculer entre mode vue et mode édition -->
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const editToggle = document.getElementById("edit-toggle");
      const viewMode = document.getElementById("view-mode");
      const editMode = document.getElementById("edit-mode");

      let editActive = false;

      editToggle.addEventListener("click", function() {
        editActive = !editActive;
        if (editActive) {
          editToggle.textContent = "Annuler";
          viewMode.classList.add("hidden");
          editMode.classList.remove("hidden");
        } else {
          editToggle.textContent = "Modifier le profil";
          viewMode.classList.remove("hidden");
          editMode.classList.add("hidden");
        }
      });
    });
  </script>
{% endblock %}
